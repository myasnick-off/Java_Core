package ru.geekbrains.jca.Lesson_13;

/**
 * Задание:
 * Все участники должны стартовать одновременно, несмотря на разное время подготовки. В тоннель не
 * может одновременно заехать больше половины участников (условность).
 * Попробуйте все это синхронизировать.
 * Первый участник, пересекший финишную черту, объявляется победителем (в момент пересечения
 * этой самой черты). Победитель должен быть только один (ситуация с 0 или 2+ победителями
 * недопустима).
 * Когда все завершат гонку, нужно выдать объявление об окончании.
 * Можно корректировать классы (в том числе конструктор машин) и добавлять объекты классов из
 * пакета java.util.concurrent.
 * */

public class MainClass {
    public static final int CARS_COUNT = 4;                             // количество участников гонки

    public static void main(String[] args) {

        System.out.println("ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Подготовка!!!");
        Race race = new Race(new Road(60), new Tunnel(), new Road(40)); // создаем трассу с дорогами и тоннелем
        Car[] cars = new Car[CARS_COUNT];                                            // создаем массив участников
        for (int i = 0; i < cars.length; i++) {
            cars[i] = new Car(race, 20 + (int) (Math.random() * 10));          // заполняем массив участниками, каждый со совей скоростью
        }
        Car.carBarrierInit();                                                        // инициализируем общий CyclicBarrier для всех участников
        for (Car car : cars) {                                                       // в цикле для всех участников:
            new Thread(car).start();                                                 // запускаем процесс гонки
        }
    }
}


